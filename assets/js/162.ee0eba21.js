(window.webpackJsonp=window.webpackJsonp||[]).push([[162],{477:function(t,v,_){"use strict";_.r(v);var l=_(3),s=Object(l.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("ul",[v("li",[t._v("声明函数使用 fn 关键字")]),t._v(" "),v("li",[t._v("依照惯例，针对函数和变量名，Rust 使用 snake case 命名规范：\n"),v("ul",[v("li",[t._v("所有的字母都是小写的，单词之间使用下划线分开")])])])]),t._v(" "),v("h2",{attrs:{id:"函数的参数"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#函数的参数"}},[t._v("#")]),t._v(" 函数的参数")]),t._v(" "),v("ul",[v("li",[t._v("parameters, arguments")]),t._v(" "),v("li",[t._v("在函数签名里，必须声明每个参数的类型")])]),t._v(" "),v("h2",{attrs:{id:"函数体的语句和表达式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#函数体的语句和表达式"}},[t._v("#")]),t._v(" 函数体的语句和表达式")]),t._v(" "),v("ul",[v("li",[t._v("函数体由一系列语句组成，可选的由一个表达式结束")]),t._v(" "),v("li",[t._v("Rust 是一个基于表达式的语言")]),t._v(" "),v("li",[t._v("语句是执行一些动作的指令")]),t._v(" "),v("li",[t._v("表达式会计算产生一个值")]),t._v(" "),v("li",[t._v("函数的定义也是语句")]),t._v(" "),v("li",[t._v("语句不返回值，所以不可以使用 "),v("code",[t._v("let")]),t._v(" 将一个语句赋给一个变量")])])])}),[],!1,null,null,null);v.default=s.exports}}]);